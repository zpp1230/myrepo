<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.jf.backstage.dao.bg_dao.mapper.PayMapper">

<resultMap type="com.cn.jf.backstage.dao.bg_dao.entity.Pay" id="payMap">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="pass" property="pass" jdbcType="VARCHAR" />
		<result column="user" property="user" jdbcType="VARCHAR" />		
		<result column="mch_id" property="mch_id" jdbcType="VARCHAR" />	
		<result column="papers" property="papers" jdbcType="BLOB" />	
		<result column="appid" property="appid" jdbcType="VARCHAR" />	
		<result column="sdkpass" property="sdkpass" jdbcType="VARCHAR" />			
		<result column="sdkuser" property="sdkuser" jdbcType="VARCHAR" />	
		<result column="silver_merchant" property="silver_merchant" jdbcType="VARCHAR" />	
		<result column="silver_end" property="silver_end" jdbcType="VARCHAR" />	
		<result column="silver_mechanism" property="silver_mechanism" jdbcType="VARCHAR" />		
		<result column="silver_news" property="silver_news" jdbcType="VARCHAR" />	
		<result column="silver_number" property="silver_number" jdbcType="VARCHAR" />	
		<result column="silver_md5" property="silver_md5" jdbcType="VARCHAR" />	
		<result column="operatorID" property="operatorID" jdbcType="VARCHAR" />			
		<result column="pay_method" property="pay_method" jdbcType="VARCHAR" />
		<result column="fileName" property="fileName" jdbcType="VARCHAR" />		
		<result column="fileRealName" property="fileRealName" jdbcType="VARCHAR" />	
</resultMap>

<insert id="save" parameterType="com.cn.jf.backstage.dao.bg_dao.entity.Pay">
    insert into tb_basic_pay(pass,user,mch_id,papers,appid,sdkpass,sdkuser,silver_merchant,silver_end,silver_mechanism,silver_news,silver_number,silver_md5,operatorID,pay_method,fileName,fileRealName)values(#{pass},#{user},#{mch_id},#{papers},#{appid},#{sdkpass},#{sdkuser},#{silver_merchant},#{silver_end},#{silver_mechanism},#{silver_news},#{silver_number},#{silver_md5},#{operatorID},#{pay_method},#{fileName},#{fileRealName})
</insert>

<select id="find" resultMap="payMap">
		select * from tb_basic_pay
		<where>
			<if test="user !=null and user !='' ">
				user like CONCAT('%',#{user},'%')
			</if>
			<if test="operatorID !=null and operatorID !='' ">
			   and	operatorID =#{operatorID}
			</if>
		</where>
		order by id desc
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	
	<select id="getTotal" parameterType="String" resultType="Long">
		select count(*) from tb_basic_pay
		<where>
			<if test="user !=null and user !='' ">
				user like CONCAT('%',#{user},'%')
			</if>
			<if test="operatorID !=null and operatorID !='' ">
			   and	operatorID =#{operatorID}
			</if>
		</where>
	</select>
	
	<delete id="detetePay" parameterType="Integer">
		delete from tb_basic_pay where id=#{id}
	</delete>
	
	<select id="getPayById" parameterType="Integer" resultMap="payMap">
	   select * from tb_basic_pay where id=#{id}
	</select>
	
    <update id="updateById" parameterType="com.cn.jf.backstage.dao.bg_dao.entity.Pay">
       update tb_basic_pay set pass=#{pass},user=#{user},mch_id=#{mch_id},papers=#{papers},appid=#{appid},sdkpass=#{sdkpass},sdkuser=#{sdkuser},silver_merchant=#{silver_merchant},silver_end=#{silver_end},silver_mechanism=#{silver_mechanism},silver_news=#{silver_news},silver_number=#{silver_number},silver_md5=#{silver_md5},operatorID=#{operatorID},pay_method=#{pay_method},fileName=#{fileName},fileRealName=#{fileRealName} where id=#{id}
    </update>
    
    <update id="updateById1" parameterType="com.cn.jf.backstage.dao.bg_dao.entity.Pay">
       update tb_basic_pay set pass=#{pass},user=#{user},mch_id=#{mch_id},appid=#{appid},sdkpass=#{sdkpass},sdkuser=#{sdkuser},silver_merchant=#{silver_merchant},silver_end=#{silver_end},silver_mechanism=#{silver_mechanism},silver_news=#{silver_news},silver_number=#{silver_number},silver_md5=#{silver_md5},operatorID=#{operatorID},pay_method=#{pay_method},fileRealName=#{fileRealName} where id=#{id}
    </update>
</mapper>